based on backend/app.py file and ml-service/app.py file 
Create a modern, responsive movie and TV show recommendation system frontend with the following requirements:

FRONTEND TECHNOLOGY STACK:

Pure HTML5, CSS3, and Modern JavaScript (ES6+) - No frameworks for maximum performance
Tailwind CSS for utility-first styling and design system
Bootstrap Grid System for responsive layouts
Fetch API for seamless backend communication
JWT Authentication for secure user sessions
Progressive Web App (PWA) features for better performance
Local Storage for user preferences and offline capability
Responsive Design for mobile, tablet, and desktop

STYLING GUIDELINES:

Netflix-inspired Dark Theme with red accent colors
Dark Mode Default with light mode toggle option
Color Palette:

Primary: Dark grays (#141414, #1f1f1f)
Accent: Netflix red (#e50914)
Text: White/Light gray (#ffffff, #cccccc)
Secondary: Dark blue (#0f0f23)

HOMEPAGE DESIGN (NON-LOGGED USERS):
- Hero section with trending movie carousel
- "What's Hot" section with horizontal scrolling cards
- Genre-based recommendation sections (Action, Comedy, Drama, etc.)
- "Regional Favorites" section for Telugu, Hindi, Tamil, Kannada movies
- "Critics' Choice" and "User Favorites" sections
- Search bar with auto-suggestions
- Clean, Netflix-inspired design with dark/light theme toggle

PERSONALIZED HOMEPAGE (LOGGED-IN USERS):
- "Recommended for You" section based on watch history
- "Because You Liked..." sections
- "Continue Watching" section
- "From Your Wishlist" suggestions
- "Trending in Your Genres" section
- Personalized hero content
- Quick access to favorites and watchlist

MOVIE/SHOW DETAIL PAGE:
- Large hero section with backdrop image and poster
- Play trailer/teaser functionality with modal player
- Complete synopsis and plot details
- Cast and crew section with clickable profiles
- Ratings display (user ratings, IMDB, Rotten Tomatoes)
- Genre tags and content information
- "More Like This" recommendations section
- Add to watchlist/favorites buttons
- User review and rating system
- Image gallery for posters and stills

USER INTERFACE COMPONENTS:
- Navigation bar with user profile dropdown
- Login/Register modal forms
- Movie/show cards with hover effects
- Carousel components for content sections
- Modal dialogs for trailers and details
- Loading skeletons for better UX
- Toast notifications for user actions
- Responsive grid layouts

RESPONSIVE DESIGN:
- Mobile-first approach with touch-friendly interfaces
- Tablet and desktop optimizations
- Flexible grid system using Bootstrap
- Tailwind CSS utilities for spacing and typography
- Smooth animations and transitions
- Optimized image sizes for different screen sizes

INTERACTIVE FEATURES:
- Smooth scrolling and navigation
- Hover effects on movie cards
- Expandable sections for cast/crew
- Modal video players for trailers
- Infinite scroll for content loading
- Filter toggles and dropdown menus
- Star rating system for user reviews
- Wishlist and favorites toggle buttons


project structure
frontend/
├── index.html
├── css/
│   ├── style.css
│   ├── admin.css
│   └── responsive.css
├── js/
│   ├── main.js
│   ├── auth.js
│   ├── admin.js
│   ├── api.js
│   └── utils.js
├── admin/
│   ├── index.html
│   ├── dashboard.html
│   ├── content-browser.html
│   ├── create-post.html
│   ├── analytics.html
│   └── system-status.html
├── pages/
│   ├── login.html
│   ├── register.html
│   ├── profile.html
│   ├── search.html
│   └── content-detail.html
├── components/
│   ├── header.html
│   ├── footer.html
│   ├── content-card.html
│   └── admin-sidebar.html
└── assets/
    ├── images/
    └── icons/

Key Files Overview:

1. **index.html** - Main homepage with content recommendations
2. **admin/index.html** - Admin dashboard main page
3. **admin/content-browser.html** - Browse and search content across databases
4. **admin/create-post.html** - Create curated posts with Telegram integration
5. **admin/analytics.html** - User analytics and system insights
6. **admin/system-status.html** - System monitoring and health checks
7. **js/admin.js** - Admin-specific JavaScript functionality
8. **css/admin.css** - Admin interface styling

Admin Features:
- Multi-database content search (TMDB, Anime, Regional)
- Drag-and-drop content curation
- Telegram channel integration
- Real-time analytics dashboard
- System health monitoring
- User management interface
- Content recommendation priority system
- Expiration date management for posts