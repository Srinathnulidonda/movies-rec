Update the recommendation system to fetch and return accurate content across all types (movies, TV shows, anime) using the following APIs: Jikan (anime), TMDB (movies & TV shows), and OMDB (movies & TV shows). Implement and optimize the following endpoints:

Endpoints
1. /recommendations/trending
   - Aggregate trending content from TMDB, OMDB, and Jikan.
   - Include movies, TV shows, and anime across all languages. Prioritize content in English, Telugu, Hindi, Tamil, Malayalam    first, but include other languages as fallback.
   - Sort by a combined metric of popularity and recency (e.g., TMDB popularity_score, Jikan score, release date).
   - Remove duplicates (based on normalized title and type).
   
2. /recommendations/new-releases
   - Aggregate new releases from all APIs.
   - Include movies, TV shows, and anime.
   - **Prioritize content in English, Telugu, Hindi, Tamil, Malayalam** first, but include other languages as fallback.
   - Sort by release_date descending, then by popularity.
   - Support optional type/language filters.
   
3. /recommendations/critics-choice
   - Aggregate top-rated content from all APIs.
   - Sort by critic/user ratings (descending) and popularity.
   - Ensure all types and languages are included.

General Requirements
- Response Schema (consistent for all endpoints):
  `{ id, title, type: "movie"|"tv"|"anime", language, genres:[], release_date, release_year, rating, critic_score, popularity_score, poster_url, synopsis, source_api }`
- Accuracy & Matching:
  - Normalize titles and aliases across APIs to avoid duplicates.
  - Implement fuzzy/partial matching for search and recommendations.
  - Ensure proper language tagging and prioritization for new releases.
- Performance:
  - Use server-side caching (Redis or Flask-Caching) per API endpoint.
  - Cache aggregated responses for 30–60 minutes to reduce API calls.
  - Implement pagination or cursor-based results.
- Error Handling:
  - Gracefully handle API failures: retry automatically, return partial results if some APIs fail.
- Frontend:
  - Include proper loading states (skeleton cards) and retry button if content fails to load.
  - Carousels: Trending Now, New Releases, Critics Choice — accept type/language filters.

Deliverables
- Fully implemented backend endpoints aggregating from Jikan, TMDB, and OMDB.
- Optimized caching and de-duplication across APIs.
- Documentation with endpoint parameters, sorting rules, cache TTLs, and sample responses.
- Frontend integration notes for loading states, retry policies, and carousel consumption.
