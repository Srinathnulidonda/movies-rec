
Endpoints
1. /recommendations/trending
   - Aggregate trending content from TMDB, OMDB, and Jikan.
   - Include movies, TV shows, and anime across all languages. Prioritize content in Telugu, English, Hindi, Tamil, Malayalam first, but include other languages as fallback.
   - Sort by a combined metric of popularity and recency (e.g., TMDB popularity_score, Jikan score, release date).
   - Remove duplicates (based on normalized title and type).
   
2. /recommendations/new-releases
   - Aggregate new releases from all APIs.
   - Include movies, TV shows, and anime.
   - **Prioritize content in Telugu, English, Hindi, Tamil, Malayalam first, but include other languages as fallback.
   - Sort by release_date descending, then by popularity.
   - Support optional type/language filters.
   
3. /recommendations/Popular-Movies
   - Aggregate top-rated content from all APIs.
   - Prioritize content in Telugu, English, Hindi, Tamil, Malayalam first, but include other languages as fallback.


Anime
‚Ä¢  Trending Anime ‚Üí /recommendations/trending?type=anime
‚Ä¢  New Anime Releases ‚Üí /recommendations/new-releases?type=anime
‚Ä¢  Top Rated Anime ‚Üí /recommendations/critics-choice?type=anime
‚Ä¢  Anime by Genre ‚Üí multiple carousels like:
‚Ä¢	Action Anime
‚Ä¢	Romance Anime
‚Ä¢	Comedy Anime
‚Ä¢	Fantasy / Isekai Anime
(API filter: /content/genre?type=anime&genre={genre})
________________________________________
üé¨ Movies
‚Ä¢	Trending Movies ‚Üí /recommendations/trending?type=movie
‚Ä¢	New Movie Releases ‚Üí /recommendations/new-releases?type=movie
‚Ä¢	Top Rated Movies ‚Üí /recommendations/critics-choice?type=movie
‚Ä¢	Movies by Genre ‚Üí multiple carousels like:
o	Action Movies ‚Üí /content/genre?type=movie&genre=Action
o	Romance Movies ‚Üí /content/genre?type=movie&genre=Romance
o	Comedy Movies ‚Üí /content/genre?type=movie&genre=Comedy
o	Thriller Movies ‚Üí /content/genre?type=movie&genre=Thriller
o	(API filter: /content/genre?type=movies &genre={genre})
________________________________________
üì∫ TV Shows
‚Ä¢	Trending TV Shows ‚Üí /recommendations/trending?type=tv
‚Ä¢	New TV Show Releases ‚Üí /recommendations/new-releases?type=tv
‚Ä¢	Top Rated TV Shows ‚Üí /recommendations/critics-choice?type=tv
‚Ä¢	TV Shows by Genre ‚Üí multiple carousels like:
o	Drama TV Shows ‚Üí /content/genre?type=tv&genre=Drama
o	Mystery TV Shows ‚Üí /content/genre?type=tv&genre=Mystery
o	Sitcoms / Comedy ‚Üí /content/genre?type=tv&genre=Comedy
o	Sci-Fi / Fantasy TV ‚Üí /content/genre?type=tv&genre=Sci-Fi
o	(API filter: /content/genre?type=tv-show&genre={genre})

The exact specifications needed for 100% accurate implementation. It includes:
Precise API endpoints and data structures
Exact scoring algorithms and formulas
Specific language prioritization logic
Detailed error handling and caching requirements
Complete duplicate removal algorithm
Performance benchmarks and validation rules
Comprehensive testing checklist



separate search from my backend/app.py and provide this in backend/search.py and implement a powerful, super-fast search system using pure Python. 
Ensure the search results are 100% accurate and instant by using:
1. N-gram analyzer for partial matching and auto-complete.
2. Fuzzy search to handle typos and misspellings.
3. Field boosting to prioritize titles, genres, and keywords.
4. Optimized queries for speed and accuracy.
5. Pagination and sorting by relevance.
6. No defaults or placeholders ‚Äì only complete realtime data should be used from the actual database.

Return the complete best version of search.py that defines search functions that can be used directly inside app.py.














  Based on the above backend/app.py Improve my below backend/algorithums.py to fetch and serve released movies, TV shows (series), and anime of the current year with accurate, real-time results from trusted sources. Add the ‚Äúnew releases of this month‚Äù category and enforce strict language prioritization.


  Language priority (strict order):
  priority_languages = ['telugu', 'english', 'hindi', 'malayalam', 'kannada', 'tamil']

  Categories to implement:
  0) new_releases_this_month ‚Üí Fetch and return the latest releases that premiered in the current calendar month (user‚Äôs timezone and region aware). Include:
  - Movies: release_date in current month
  - TV/Series: first_air_date in current month
  - Anime: airing_start/first_air_date in current month
  Rules: limit to current year, region-aware release dates, sort by date (newest first), then by popularity/vote_count; refresh at least daily (prefer hourly); apply language priority ordering.

  1) trending_tv_shows ‚Üí Fetch and return currently trending TV shows (limit to titles released/premiered in the current year). Apply language priority.

  2) trending_anime ‚Üí Fetch and return currently trending anime (current-year only). Apply language priority.

  3) popular_nearby ‚Üí Fetch popular content based on the user‚Äôs region/location (geo/region aware, current-year only). Apply language priority.

  4) top_10_today ‚Üí Daily Top 10 across all categories (movies, TV, anime). Auto-refresh every day at 00:00 user-local time. Prefer current-year titles; if fewer than 10, backfill from previous year but keep current-year first. Apply language priority.

  5) critics_choice ‚Üí Top critically acclaimed movies, TV shows, and anime of the year. Aggregate and rank using trusted sources (e.g., TMDB ratings + vote_count threshold, IMDb ratings/votes, MyAnimeList scores/reviews). Update daily or weekly. Apply language priority.

  Core requirements (apply to all categories):
  - Accuracy & freshness:
    - Use trusted sources (TMDB, IMDb/OMDb, MyAnimeList/Jikan). Prefer official/verified endpoints.
    - Implement caching with short TTLs (e.g., 1‚Äì6 hours), staggered refresh, and retry/backoff.
    - Ensure daily resets where specified (e.g., top_10_today).
  - Current-year filter:
    - Only include titles whose primary release/first_air_date is within the current year (except backfill where explicitly noted).
  - Region & timezone:
    - Respect user region (e.g., TMDB ‚Äúregion‚Äù/‚Äúwatch_region‚Äù). Use the user‚Äôs timezone for month/day boundaries.
  - Language prioritization:
    - Always present results grouped/sorted by priority_languages order first. If results are insufficient in those languages, backfill with other languages after the prioritized set.
  - Deduplication & merging:
    - Merge the same title across sources (TMDB/IMDb/MAL), prefer the most complete metadata, and deduplicate by external IDs.
  - Sorting (after language priority):
    - Primary: category-specific signal (e.g., release_date desc for new_releases_this_month; trend/popularity for trending; composite critic score for critics_choice).
    - Tie-breakers: vote_count (higher first), then recency.
  - Minimum metadata to return per item:
    - id(s) (TMDB, IMDb, MAL), type (movie/tv/anime), title, original_title, original_language, languages, overview, poster/backdrop, genres, release_date/first_air_date, region(s), popularity, ratings (TMDB vote_average/vote_count, IMDb rating/votes, MAL score/users), and source attribution.
  - Error handling:
    - Fail gracefully with partial results if one provider is down. Log and continue.
  TMDB + Jikan integration, month-boundary filters, caching and schedulers